version: '3.8'
services:
    postgres:
        image: postgres:14.5
        restart: always
        user: postgres
        environment:
            - POSTGRES_PASSWORD=postgres_password
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready']
            interval: 4s
            timeout: 4s
            retries: 5
        stdin_open: true
        tty: true

    backend-user:
        build:
            dockerfile: dockerfiles/Dockerfile.dev
            context: .
            args:
                - NPM_TOKEN=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
        environment:
            - ENVIRONMENT=dev
            - REFRESH_TOKEN_PAYLOAD_SECRET=my-super-secret3
            - PORT=49200
        volumes:
            - /app/node_modules
            - .:/app
        ports:
            - 49200:49200
        depends_on:
            postgres:
                condition: service_healthy
    zookeeper:
        image: 'bitnami/zookeeper:latest'
        ports:
            - '2181'
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
    kafka:
        image: 'bitnami/kafka'
        ports:
            - '9092'
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
            - KAFKA_CFG_LISTENERS=CLIENT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
        depends_on:
            - zookeeper
